# ======================================================================
#
#   WFiIS - laboratorium programowania równoległego XcalableMP/OpenACC
#
# ======================================================================

#   Uruchamianie aplikacji hybrydowych XMP/ACC na stacjach stud...
#           w pracowni komputerowej 204 (D-10).


# ---------------- Przygotowanie środowiska  --------------------------

### 1. Załadowanie zmiennych środowiskowych do bieżącej powłoki Bash

# - dla pakietu Omni Compiler (wraz z MPICH, MKL, bez OpenACC)

 source /opt/nfs/config/source_omnicomp.sh

# - dla pakietu Omni Compiler (oraz MPICH, MKL, OpenACC/CUDA)

 source /opt/nfs/config/source_omnicomp_acc.sh


### 2. Przygotowanie listy węzłów (komunikacja MPI):

 /opt/nfs/config/station204_name_list.sh 101 116 > nodes
 cat nodes
stud204-...
stud204-...


# ----------------- Kompilacja przykładu XMP --------------------------

# 3. Kompilacja kodu programu - wersja roproszona, dyrektywy XcalableMP

 xmpcc -I/opt/nfs/cuda/include -L/opt/nfs/cuda/lib64 \
       source_xmp.c -o program_xmp


# ----------------- Uruchomienie przykładu XMP ------------------------

# 4. Uruchomienie programu (tu pod kontrolą środowiska MPI/MPICH 3)

 mpiexec -f nodes -n 4 -env CUDA_VISIBLE_DEVICES=0 ./program_xmp \
	    | egrep -v '(context|handle)'
PASS

# Jeżeli środowisko MPICH jest skompilowane z opcją diagnostyki
# wszystich błędów, pojawią się dodatkowe komunikaty świadczące
# o niestarannej implementacji pakietu Omni - brak poprawnego
# zwalniania zasobów MPI (np. komunikatorów) przed MPI_Finalize().
# W celu ograniczenia liczby komunikatów strumień błędów MPICH
# jest przekierowywany do /dev/null.
# Pozostałe komunikaty można odfiltrować jawnie.
# W razie nie poprawnego działania aplikacji filtry należy wyłączyć!


# ----------------- Kompilacja przykładu XMP+ACC ----------------------
#                     05/2023 - NIE DZIAŁA :(

# 5. Kompilacja kodu programu - wersja roproszona, dyrektywy OpenACC

 xmpcc -xacc -fopenmp --device=cc75 \
       -I/opt/nfs/cuda/include -L/opt/nfs/cuda/lib64 \
       source_xacc.c -o program_xacc -lcudart


# ----------------- Uruchomienie przykładu XMP+ACC --------------------

# 6. Uruchomienie programu (tu pod kontrolą środowiska MPI/MPICH)

 mpiexec -f nodes -n 4 -env CUDA_VISIBLE_DEVICES=0 -errfile-pattern /dev/null \
	./program_xacc | egrep -v '(context|handle)'
PASS


# ----------------- Kompilacja przykładu XMP+MPI ----------------------

# 7. Kompilacja kodu programu - bezpośrednia integracja z MPI

 xmpcc -I/opt/nfs/cuda/include -L/opt/nfs/cuda/lib64 \
       source_xmpi.c -o program_xmpi -lcudart


# ----------------- Uruchomienie przykładu XMP+MPI --------------------

# 8. Uruchomienie programu (tu pod kontrolą środowiska MPI/MPICH)

 mpiexec -f nodes -n 4 -env CUDA_VISIBLE_DEVICES=0 -errfile-pattern /dev/null \
	./program_xmpi | egrep -v '(context|handle)'
PASS



# ----------------- Kompilacja przykładu OpenACC ----------------------

# 9. Kompilacja kodu programu - wersja tylko z dyrektywami OpenACC
#                     05/2023 - NIE DZIAŁA :(

 ompcc -acc --device=cc75 source_acc.c -o program_acc -lcudart

# ----------------- Uruchomienie przykładu OpenACC --------------------

# 10. Uruchomienie programu

 ./program_acc
PASS


# ---------------------------------------------------------------------
